# Copyright 2022 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: verify-enterprise-contract
  annotations:
    tekton.dev/displayName: Verify Enterprise Contract
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: ec, chains, signature, conftest
  labels:
    app.kubernetes.io/version: "0.1"

spec:
  description: Verify the enterprise contract is met
  params:
    - name: IMAGES
      type: string
      description: |
        Spec section of an ApplicationSnapshot resource. Not all fields of the
        resource are required. A minimal example:
          {
            "components": [
              {
                "containerImage": "quay.io/example/repo:latest"
              }
            ]
          }
        Each "containerImage" in the "components" array is validated.
    - name: POLICY_CONFIGURATION
      type: string
      description: |
        Name of the policy configuration (EnterpriseContractPolicy
        resource) to use. `namespace/name` or `name` syntax supported. If
        namespace is omitted the namespace where the task runs is used.
      default: "enterprise-contract-service/default"

    - name: PUBLIC_KEY
      type: string
      description: >-
        Public key used to verify signatures. Must be a valid k8s cosign
        reference, e.g. k8s://my-space/my-secret where my-secret contains
        the expected cosign.pub attribute.
      default: ""

    - name: REKOR_HOST
      type: string
      description: Rekor host for transparency log lookups
      default: ""

    - name: SSL_CERT_DIR
      type: string
      description: |
        Path to a directory containing SSL certs to be used when communicating
        with external services. This is useful when using the integrated registry
        and a local instance of Rekor on a development cluster which may use
        certificates issued by a not-commonly trusted root CA. In such cases,
        "/var/run/secrets/kubernetes.io/serviceaccount" is a good value. Multiple
        paths can be provided by using the ":" separator.
      default: ""

    - name: INFO
      type: string
      description: Include rule titles and descriptions in the output. Set to "false" to disable it.
      default: "true"

    - name: STRICT
      type: string
      description: Fail the task if policy fails. Set to "false" to disable it.
      default: "true"

    - name: HOMEDIR
      type: string
      description: Value for the HOME environment variable.
      default: /tekton/home

  results:
    - name: HACBS_TEST_OUTPUT
      description: Short summary of the policy evaluation for each image

  stepTemplate:
    env:
      - name: HOME
        value: "$(params.HOMEDIR)"

  steps:
    - name: version
      image: quay.io/hacbs-contract/ec-cli:snapshot@sha256:9c59e25dd4700af69347128a37eb3f413da750cb80aeb514b3511629732571c0
      command: [ec]
      args:
        - version
    - name: validate
      image: quay.io/hacbs-contract/ec-cli:snapshot@sha256:9c59e25dd4700af69347128a37eb3f413da750cb80aeb514b3511629732571c0
      command: [ec]
      args:
        - validate
        - image
        - "--json-input"
        - "$(params.IMAGES)"
        - "--policy"
        - "$(params.POLICY_CONFIGURATION)"
        - "--public-key"
        - "$(params.PUBLIC_KEY)"
        - "--rekor-url"
        - "$(params.REKOR_HOST)"
        # NOTE: The syntax below is required to negate boolean parameters
        - "--info=$(params.INFO)"
        - "--strict=$(params.STRICT)"
        - "--output"
        - "yaml"
        - "--output"
        - "hacbs=$(results.HACBS_TEST_OUTPUT.path)"
      env:
        - name: SSL_CERT_DIR
          # The Tekton Operator automatically sets the SSL_CERT_DIR env to the value below but,
          # of course, without the $(param.SSL_CERT_DIR) bit. When a Task Step sets it to a
          # value, the Tekton Operator does not do any processing of the value. However, Tekton
          # Pipelines will fail to execute because some of these values are required for its
          # execution. As a workaround, append the SSL_CERT_DIR value from params to the default
          # value expected by Tekton Pipelines. NOTE: If params.SSL_CERT_DIR is empty, the value
          # will contain a trailing ":" - this is ok.
          value: "/tekton-custom-certs:/etc/ssl/certs:/etc/pki/tls/certs:/system/etc/security/cacerts:$(params.SSL_CERT_DIR)"
